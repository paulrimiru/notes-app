{"version":3,"sources":["utils/hooks.ts","pages/App/styles.ts","components/CategoryListItem/styles.ts","components/CategoryListItem/index.tsx","components/CategoryList/index.tsx","components/NoteListItem/styles.ts","components/NoteListItem/index.tsx","pages/Meeting/styles.ts","components/MeetingNoteItem/styles.ts","components/MeetingNoteItem/index.tsx","utils/axios.ts","pages/Meeting/index.tsx","components/Loader/index.tsx","components/Form/styles.ts","utils/lib.ts","components/Form/index.tsx","pages/App/index.tsx","pages/Auth/styles.ts","pages/Auth/index.tsx","pages/Routes/index.tsx","serviceWorker.ts","index.tsx"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","error","console","log","storedValue","setStoredValue","useEffect","value","setItem","useMessage","enqueueSnackbar","useSnackbar","message","variant","anchorOrigin","vertical","horizontal","preventDuplicate","useStyles","makeStyles","theme","button","marginBottom","spacing","notesList","flexGrow","orgModal","padding","orgSelector","maxWidth","container","display","flexDirection","justifyContent","alignItems","height","backgroudColor","cursor","title","paddingLeft","newCategoryTextField","CategoryListItem","mode","onSave","onDelete","onClick","id","selectForEdit","onEdit","classes","useCategoryItemStyles","setvalue","handleSave","name","displayMode","gutterBottom","className","IconButton","edge","aria-label","editMode","label","autoFocus","onKeyPress","event","onChange","e","target","Paper","NoteList","data","map","note","index","createStyles","root","width","backgroundColor","palette","background","paper","inline","avatar","color","getContrastText","deepOrange","A200","newNoteTextField","onNoteSelected","ListItemAvatar","Avatar","split","toLocaleUpperCase","ListItemText","primary","secondary","component","updatedAt","Intl","DateTimeFormat","format","Date","ListItemSecondaryAction","ListItem","Divider","useMeetingStyles","attendees","alignSelf","attendeesTag","marginLeft","marginTop","meetingNotes","overflowY","inputRoot","inputField","doneButton","justifySelf","header","inputFieldTitle","inputContainer","actions","useMeetingNoteItemStyles","displayContainer","displayTextContainer","MeetingNoteItem","textFieldValue","setTextFieldValue","titleFieldValue","setTitleFieldValue","Fragment","paragraph","align","multiline","rows","helperText","type","http","token","axios","create","baseURL","headers","Authorization","timeout","Meeting","props","onUpdate","orgId","setMeetingNotes","setAttendees","orgMembers","setOrgMembers","showSuccess","showError","handleCreate","length","toString","meeting","JSON","parse","notes","fetchOrganisationMembers","a","get","result","member","username","displayMessage","status","mNote","handleDelete","filter","handleEdit","Autocomplete","multiple","newValue","options","defaultValue","renderTags","getTagProps","option","Chip","toUpperCase","renderInput","params","miltiline","List","myNotes","noteString","stringify","handleUpdateNote","backdrop","zIndex","loader","transform","LoaderComponent","loading","styles","Backdrop","open","active","innerClassName","useFormStyles","textField","dropDown","toSentenceCase","word","replace","charAt","slice","PasswordInputField","forwardRef","ref","hidden","setHidden","handleVisibilityToggle","fullWidth","inputRef","InputProps","endAdornment","InputAdornment","position","onMouseDown","InputField","DropDownField","select","SelectProps","native","autoWidth","Form","fields","actionsName","onSubmit","onCancel","hasCancel","useForm","reValidateMode","register","handleSubmit","errors","preventDefault","fieldProps","formField","shortId","generate","getFormField","validations","Button","size","disableElevation","App","categories","setCategories","setNotes","organisations","setOrganisations","selectedCategory","openNotesPane","setopenNotesPane","openOrganisationDialog","setOpenOrganisationDialog","setLoading","selectedNote","setSelectedNote","useAppStyles","history","useHistory","fetchOrganisations","fetchCategories","find","organ","selected","onSelectNoteForEdit","toogleNotes","fetchNotes","handleDeleteNote","delete","handleDeleteCategory","category","handleOrganisationCreate","post","resp","handleUpdateOrganisation","put","members","handleCategoryCreate","organisationId","handleCategoryUpdate","handleNoteCreate","categoryId","handleNoteUpdate","org","Loader","Dialog","aria-labelledby","aria-describedby","required","min","CategoryList","endIcon","push","removeItem","NoteListItem","useAuthStyles","textfield","textTransform","fontSize","fontWeight","Auth","state","setState","setToken","handleLogin","handleRegister","loginUser","userData","registerUser","access_token","to","pathname","Hidden","mdDown","src","alt","pattern","max","PrivateRoute","Component","rest","render","Router","path","exact","Boolean","location","hostname","match","createMuiTheme","main","grey","ReactDOM","StrictMode","ThemeProvider","initialIsOpen","maxSnack","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"+aAGO,SAASA,EAAgBC,EAAaC,GAAwE,IAAD,EAC5EC,oBAAS,WAC7C,IACE,IAAMC,EAAOC,OAAOC,aAAaC,QAAQN,GACzC,OAAOG,GAAcF,EACrB,MAAOM,GAEP,OADAC,QAAQC,IAAIF,GACLN,MAPuG,mBAC3GS,EAD2G,KAC9FC,EAD8F,KAwBlH,OALAC,qBAAU,WACRD,EAAeP,OAAOC,aAAaC,QAAQN,IAAQU,KAElD,CAACN,OAAOC,aAAaC,QAAQN,KAEzB,CAACU,EAbS,SAACG,GAChB,IACET,OAAOC,aAAaS,QAAQd,EAAKa,GAAS,IAC1C,MAAON,GACPC,QAAQC,IAAIF,MAYX,SAASQ,IAAc,IACpBC,EAAoBC,cAApBD,gBAmCR,MAAO,CAjCa,SAACE,GACnBF,EAAgBE,EAAS,CACvBC,QAAS,UACTC,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,kBAAkB,KAIJ,SAACL,GACjBF,EAAgBE,EAAS,CACvBC,QAAS,QACTC,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,kBAAkB,KAIL,SAACL,GAChBF,EAAgBE,EAAS,CACvBC,QAAS,OACTC,aAAc,CACZC,SAAU,SACVC,WAAY,UAEdC,kBAAkB,M,8IC7CTC,EAfGC,aAAW,SAACC,GAAD,MAAY,CACvCC,OAAQ,CACNC,aAAcF,EAAMG,QAAQ,IAE9BC,UAAW,CACTC,SAAU,GAEZC,SAAU,CACRC,QAAS,IAEXC,YAAa,CACXC,SAAU,W,iBCcCX,EAzBGC,aAAW,SAACC,GAAD,MAAY,CACvCU,UAAW,CACTC,QAAS,OACTC,cAAe,MACfC,eAAgB,gBAChBC,WAAY,SACZP,QAAS,EACTL,aAAc,EAEda,OAAQ,GACRC,eAAgB,UAEhB,UAAW,CACTC,OAAQ,YAGZC,MAAO,CACLC,YAAa,IAEfC,qBAAsB,CACpBf,SAAU,EACVc,YAAa,Q,oEC8CFE,EA9CU,SAAC,GAAkG,IAAhGH,EAA+F,EAA/FA,MAAOI,EAAwF,EAAxFA,KAAMC,EAAkF,EAAlFA,OAAQC,EAA0E,EAA1EA,SAAUC,EAAgE,EAAhEA,QAASC,EAAuD,EAAvDA,GAAIC,EAAmD,EAAnDA,cAAeC,EAAoC,EAApCA,OAC/EC,EAAUC,IADyG,EAE/FtD,mBAAS0C,GAFsF,mBAElH/B,EAFkH,KAE3G4C,EAF2G,KAInHC,EAAa,WAAiB,WAATV,EAAoBC,EAAO,CAAEU,KAAM9C,IAAWyC,EAAO,CAAEK,KAAM9C,EAAOuC,QAEzFQ,EACJ,oCACE,kBAAC,IAAD,CAAYzC,QAAQ,QAAQ0C,cAAY,EAACC,UAAWP,EAAQX,OACxDA,GAEJ,6BACE,kBAACmB,EAAA,EAAD,CAAYC,KAAK,MAAMC,aAAW,OAAOd,QAAS,kBAAME,EAAcD,KACpE,kBAAC,IAAD,OAEF,kBAACW,EAAA,EAAD,CAAYE,aAAW,SAAUd,QAAS,WAAQD,EAASE,KACzD,kBAAC,IAAD,SAOFc,EACJ,oCACE,kBAAC,IAAD,CACEC,MAAM,WACNhD,QAAQ,SACR2C,UAAWP,EAAQT,qBACnBsB,WAAS,EACTvD,MAAOA,EACPwD,WAAY,SAACC,GAA8B,UAAdA,EAAMtE,KAAmB0D,KACtDa,SAAU,SAAAC,GAAC,OAAIf,EAASe,EAAEC,OAAO5D,UAEnC,kBAACkD,EAAA,EAAD,CAAYE,aAAW,OAAOd,QAASO,GACrC,kBAAC,IAAD,QAKN,OACA,kBAACgB,EAAA,EAAD,CAAOvD,QAAQ,WAAW2C,UAAWP,EAAQnB,UAAWe,QAAS,WAAqB,YAATH,GAAsBG,EAAQC,KAC9F,YAATJ,EAAqBkB,EAAWN,ICxBvBe,EArBE,SAAC,GAA+E,IAA7EC,EAA4E,EAA5EA,KAAM3B,EAAsE,EAAtEA,OAAQC,EAA8D,EAA9DA,SAAUC,EAAoD,EAApDA,QAASE,EAA2C,EAA3CA,cAAeC,EAA4B,EAA5BA,OAClE,OACE,yBAAKQ,UAAU,QACb,kBAAC,IAAD,CAAY3C,QAAQ,KAAK0C,cAAY,GAArC,cAGEe,EAAKC,KAAI,SAACC,EAAMC,GAAP,OACT,kBAAC,EAAD,CACE/E,IAAK+E,EACL3B,GAAI0B,EAAK1B,GACTR,MAAOkC,EAAKnB,KACZX,KAAM8B,EAAK9B,KACXC,OAAQA,EACRC,SAAUA,EACVG,cAAeA,EACfC,OAAQA,EACRH,QAASA,S,oFCbJ3B,GApBGC,aAAW,SAACC,GAAD,OAC3BsD,aAAa,CACXC,KAAM,CACJC,MAAO,OACPC,gBAAiBzD,EAAM0D,QAAQC,WAAWC,OAE5CC,OAAQ,CACNlD,QAAS,UAEXmD,OAAQ,CACNC,MAAO/D,EAAM0D,QAAQM,gBAAgBC,IAAWC,MAChDT,gBAAiBQ,IAAWC,MAE9BC,iBAAkB,CAChB9D,SAAU,EACVc,YAAa,SCkEJ8B,GA5DE,SAAC,GAAsF,IAAD,EAAnFG,EAAmF,EAAnFA,KAAMgB,EAA6E,EAA7EA,eAAgB7C,EAA6D,EAA7DA,OAAQC,EAAqD,EAArDA,SAAUG,EAA2C,EAA3CA,cAAeC,EAA4B,EAA5BA,OACnEC,EAAU/B,KADqF,EAE3EtB,mBAAS4E,EAAKnB,MAF6D,mBAE9F9C,EAF8F,KAEvF4C,EAFuF,KAI/FC,EAAa,WAAsB,WAAdoB,EAAK9B,KAAoBC,EAAO,CAAEU,KAAM9C,IAAWyC,EAAO,CAAEK,KAAM9C,EAAOuC,GAAI0B,EAAK1B,MAEvGQ,EACJ,oCACE,kBAACmC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAQlC,UAAWP,EAAQiC,QAA3B,UAAoCV,EAAKnB,KAAKsC,MAAM,IAAI,UAAxD,aAAoC,EAAwBC,sBAE5D,kBAACC,EAAA,EAAD,CACEC,QAAStB,EAAKnB,KACd0C,UAAW,oCACT,kBAAC,IAAD,CACEC,UAAU,OACVnF,QAAQ,QACR2C,UAAWP,EAAQgC,OACnBE,MAAM,eAJR,kBAMkBX,EAAKyB,YAAa,IAAIC,KAAKC,gBAAiBC,OAAO,IAAIC,KAAK7B,EAAKyB,gBAGrF,kBAACK,EAAA,EAAD,KACE,kBAAC7C,EAAA,EAAD,CAAYC,KAAK,MAAMC,aAAW,OAAOd,QAAS,kBAAME,EAAcyB,EAAK1B,MACzE,kBAAC,IAAD,OAEF,kBAACW,EAAA,EAAD,CAAYC,KAAK,MAAMC,aAAW,SAAUd,QAAS,kBAAMD,EAAS4B,EAAK1B,MACvE,kBAAC,IAAD,SAMJc,EACJ,oCACE,kBAAC,IAAD,CACEC,MAAM,UACNhD,QAAQ,SACR2C,UAAWP,EAAQsC,iBACnBzB,WAAS,EACTvD,MAAOA,EACPwD,WAAY,SAACC,GAA8B,UAAdA,EAAMtE,KAAmB0D,KACtDa,SAAU,SAAAC,GAAC,OAAIf,EAASe,EAAEC,OAAO5D,UACnC,kBAACkD,EAAA,EAAD,CAAYE,aAAW,OAAOd,QAASO,GACrC,kBAAC,IAAD,QAKN,OACE,oCACE,kBAACmD,GAAA,EAAD,CAAUrE,WAAW,aAAab,QAAM,EAACwB,QAAS,kBAAM2C,EAAehB,KACrD,YAAdA,EAAK9B,KAAqBkB,EAAWN,GAEzC,kBAACkD,GAAA,EAAD,CAAS3F,QAAQ,QAAQmF,UAAU,S,oBCtB1BS,GAvDUtF,aAAW,SAACC,GAAD,OAClCsD,aAAa,CACXgC,UAAW,CACT/E,QAAS,GACTiD,MAAO,MACP+B,UAAW,SACXxE,OAAQ,MAEVyE,aAAc,CACZC,WAAY,EACZC,UAAW,GACXxF,aAAc,IAEhByF,aAAc,CACZtF,SAAU,EACVmD,MAAO,MACP+B,UAAW,SACXK,UAAW,QAEbC,UAAW,CACTlF,QAAS,OACTC,cAAe,MACfE,WAAY,SACZ0C,MAAO,MACPzC,OAAQ,MACRwE,UAAW,SACXrF,aAAc,IAEhB4F,WAAY,GAGZC,WAAY,CACVC,YAAa,UAEfC,OAAQ,CACNzC,MAAO,MACP+B,UAAW,UAEbW,gBAAiB,GAGjBC,eAAgB,CACdxF,QAAS,OACTC,cAAe,SACf4C,MAAO,QAET4C,QAAS,CACPzF,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChBC,WAAY,e,qBCLHuF,I,OA7CkBtG,aAAW,SAACC,GAAD,OAC1CsD,aAAa,CACXO,OAAQ,CACNL,MAAO,OAET4C,QAAS,CACPzF,QAAS,OACTC,cAAe,SACfC,eAAgB,SAChB2C,MAAO,IAETqC,UAAW,CACTlF,QAAS,OACTC,cAAe,MACfE,WAAY,SACZyE,UAAW,SACX/B,MAAO,OACPtD,aAAc,IAEhB4F,WAAY,GAGZC,WAAY,CACVC,YAAa,UAEfC,OAAQ,GAERC,gBAAiB,GAEjBC,eAAgB,CACdxF,QAAS,OACTC,cAAe,SACf4C,MAAO,QAET8C,iBAAkB,CAChB3F,QAAS,OACTC,cAAe,MACfE,WAAY,UAEdyF,qBAAsB,CACpBlG,SAAU,SCwCDmG,GAjES,SAAC,GAA8E,IAA5EpD,EAA2E,EAA3EA,KAAMlC,EAAqE,EAArEA,MAAOQ,EAA8D,EAA9DA,GAAIJ,EAA0D,EAA1DA,KAAMM,EAAoD,EAApDA,OAAQL,EAA4C,EAA5CA,OAAQC,EAAoC,EAApCA,SAC1DK,EAAUwE,KADoF,EAExD7H,mBAAS4E,GAF+C,mBAE7FqD,EAF6F,KAE7EC,EAF6E,OAGtDlI,mBAAS0C,EAAMqD,MAAM,KAAK,IAH4B,mBAG7FoC,EAH6F,KAG5EC,EAH4E,KAK9F1E,EACJ,yBAAKE,UAAWP,EAAQyE,kBACtB,kBAAC7B,EAAA,EAAD,CACEC,QAASxD,EACTW,QAAS,CAAE8C,UAAW9C,EAAQgC,QAC9Bc,UAAW,kBAAC,IAAMkC,SAAP,KACT,kBAAC,IAAD,CACEjC,UAAU,OACVnF,QAAQ,QACRsE,MAAM,cACN+C,WAAS,EACTC,MAAM,WAEL3D,MAGP,kBAAC8B,EAAA,EAAD,CAAyB9C,UAAWP,EAAQuE,SAC1C,kBAAC/D,EAAA,EAAD,CAAYC,KAAK,MAAMC,aAAW,OAAOd,QAAS,kBAAMG,EAAOF,KAC7D,kBAAC,IAAD,OAEF,kBAACW,EAAA,EAAD,CAAYC,KAAK,MAAMC,aAAW,SAASd,QAAS,kBAAMD,EAASE,KACjE,kBAAC,IAAD,SAMFc,EACJ,yBAAKJ,UAAWP,EAAQgE,WACtB,yBAAKzD,UAAWP,EAAQsE,gBACtB,kBAAC,IAAD,CACE1D,MAAM,QACNhD,QAAQ,SACR2C,UAAWP,EAAQqE,gBACnBxD,WAAS,EACTvD,MAAOwH,EACP9D,SAAU,SAAAC,GAAC,OAAI8D,EAAmB9D,EAAEC,OAAO5D,UAC7C,kBAAC,IAAD,CACEiD,UAAWP,EAAQiE,WACnBrD,MAAM,uBACNuE,WAAS,EACTC,KAAM,EACN9H,MAAOsH,EACP5D,SAAU,SAACD,GAAD,OAAW8D,EAAkB9D,EAAMG,OAAO5D,QACpD+H,WAAW,wCACXzH,QAAQ,YAGZ,kBAAC4C,EAAA,EAAD,CAAY8E,KAAK,SAAS/E,UAAWP,EAAQkE,WAAYxD,aAAW,SAASd,QAAS,WAAQF,EAAO,CAACG,KAAIR,MAAM,GAAD,OAAKA,EAAMqD,MAAM,KAAK,GAAtB,cAA8BoC,GAAmBvD,KAAMqD,MACpK,kBAAC,IAAD,QAIN,OACE,kBAACtB,GAAA,EAAD,CAAUrE,WAAW,cACR,SAATQ,EAAkBkB,EAAWN,I,qBC3ExBkF,GAAO,WAClB,IAAMC,EAAQ1I,aAAaC,QAAQ,SAEnC,OAAO0I,KAAMC,OAAO,CAClBC,QAAS,yCACTC,QAASJ,EACL,CACEK,cAAc,UAAD,OAAYL,IAE3B,GACJM,QAAS,OC6KEC,GAjKC,SAACC,GAAyB,IACjCzE,EAAyByE,EAAzBzE,KAAM0E,EAAmBD,EAAnBC,SAAUC,EAASF,EAATE,MACjBlG,EAAUwD,KAFuB,EAGC7G,mBAAmF,IAHpF,mBAGhCmH,EAHgC,KAGlBqC,EAHkB,OAIKxJ,mBAAS,IAJd,mBAIhCiI,EAJgC,KAIhBC,EAJgB,OAKOlI,mBAAS,IALhB,mBAKhCmI,EALgC,KAKfC,EALe,OAMLpI,mBAAS,CAAC,OANL,mBAMhC8G,EANgC,KAMrB2C,EANqB,OAOHzJ,mBAAS,IAPN,mBAOhC0J,EAPgC,KAOpBC,EAPoB,OAQN9I,IARM,mBAQhC+I,EARgC,KAQnBC,EARmB,KAUjCC,EAAe,WACnBN,EAAgB,GAAD,mBAAKrC,GAAL,CAAmB,CAAEjE,GAAIiE,EAAa4C,OAAOC,WAAYlH,KAAM,UAAWJ,MAAM,GAAD,QAAK,IAAI4D,KAAKC,gBAAiBC,OAAO,IAAIC,MAA1C,cAAuD0B,GAAmBvD,KAAMqD,MAC9KC,EAAkB,IAClBE,EAAmB,KAGrB1H,qBAAU,WAER,GADAJ,QAAQC,IAAIqE,GACRA,EAAKA,KAAM,CACb,IAAMqF,EAAUC,KAAKC,MAAMvF,EAAKA,MAChC6E,EAAaQ,EAAQnD,WACrB0C,EAAgBS,EAAQG,YAExBX,EAAa,IACbD,EAAgB,IAEdD,GACFc,EAAyBd,KAC1B,CAACF,IAEJ,IAAMgB,EAAwB,uCAAG,WAAOd,GAAP,eAAAe,EAAA,+EAER1B,KAAO2B,IAAP,wBAA4BhB,EAA5B,aAFQ,OAEvBiB,EAFuB,OAG7Bb,EAAca,EAAO9F,KAAKC,KAAI,SAAC8F,GAAD,OAAiBA,EAAOC,aAHzB,gDAK7BC,EAAe,OAAQ,KAAM3J,SALA,yDAAH,sDASxB2J,EAAiB,SAACC,EAAgB5J,GACtC,OAAQ4J,GACN,IAAK,UACHhB,EAAY,uBACZ,MACF,IAAK,QACHC,EAAU7I,GAAW,oBAKrBwC,EAAa,SAACoB,GAClB4E,EAAgBrC,EAAaxC,KAAI,SAAAkG,GAC/B,OAAIA,EAAM3H,KAAO0B,EAAK1B,GACb,uCACF2H,GACAjG,GAFL,IAGE9B,KAAM,YAIH+H,OAILC,EAAe,SAAC5H,GACpBsG,EAAgBrC,EAAa4D,QAAO,SAAAF,GAAK,OAAIA,EAAM3H,KAAOA,OAGtD8H,EAAa,SAAC9H,GAClBsG,EAAgBrC,EAAaxC,KAAI,SAAAkG,GAC/B,OAAIA,EAAM3H,KAAOA,EACR,2BACF2H,GADL,IAEE/H,KAAM,SAIH+H,OAiBX,OAAKjG,EAAK1B,GAKR,yBAAKU,UAAU,WACb,kBAAC,IAAD,CAAY3C,QAAQ,KAAK0C,cAAY,EAACC,UAAWP,EAAQoE,QACrD7C,EAAKnB,MAET,kBAACwH,GAAA,EAAD,CACErH,UAAWP,EAAQyD,UACnBoE,UAAQ,EACRvK,MAAOmG,EACPzC,SAAU,SAACD,EAAO+G,GACZA,GACF1B,EAAa0B,IAGjBjI,GAAG,cACHkI,QAAS1B,EACT2B,aAAc,CAAC,MACfC,WAAY,SAAC3K,EAAiB4K,GAAlB,OACV5K,EAAMgE,KAAI,SAAC6G,EAAgB3G,GAAjB,aACR,kBAAC4G,GAAA,EAAD,eAAMlG,MAAM,UAAUtB,MAAOuH,EAAQlG,OAAQ,kBAACQ,EAAA,EAAD,eAAS0F,EAAOzF,MAAM,IAAI,UAA1B,aAAS,EAAqB2F,gBAA6BH,EAAY,CAAE1G,UAAtH,CAAgIjB,UAAWP,EAAQ2D,oBAGvJ2E,YAAa,SAACC,GAAD,OACX,kBAAC,IAAD,iBAAeA,EAAf,CAAuB3K,QAAQ,SAASgD,MAAM,kBAAkB4H,WAAS,EAACpD,KAAM,QAGpF,kBAACqD,EAAA,EAAD,CAAMlI,UAAWP,EAAQ8D,cACrBA,EAAaxC,KAAI,SAAAC,GAAI,OAAK,kBAAC,GAAD,iBAAqBA,EAArB,CAA2BxB,OAAQ4H,EAAYhI,SAAU8H,EAAc/H,OAAQS,SAE7G,yBAAKI,UAAWP,EAAQgE,WACtB,yBAAKzD,UAAWP,EAAQsE,gBACtB,kBAAC,IAAD,CACE1D,MAAM,QACNhD,QAAQ,SACR2C,UAAWP,EAAQqE,gBACnBxD,WAAS,EACTvD,MAAOwH,EACPhE,WAAY,SAACC,GAA8B,UAAdA,EAAMtE,KAAmBgK,KACtDzF,SAAU,SAAAC,GAAC,OAAI8D,EAAmB9D,EAAEC,OAAO5D,UAC7C,kBAAC,IAAD,CACEiD,UAAWP,EAAQiE,WACnBrD,MAAM,uBACNuE,WAAS,EACTC,KAAM,EACN9H,MAAOsH,EACP5D,SAAU,SAACD,GAAD,OAAW8D,EAAkB9D,EAAMG,OAAO5D,QACpD+H,WAAW,wCACXzH,QAAQ,YAGd,yBAAK2C,UAAWP,EAAQuE,SACtB,kBAAC/D,EAAA,EAAD,CAAYD,UAAWP,EAAQkE,WAAYxD,aAAW,SAASd,QAAS,SAACmB,GAAY0F,MACnF,kBAAC,IAAD,OAEF,kBAACjG,EAAA,EAAD,CAAYD,UAAWP,EAAQkE,WAAYxD,aAAW,SAASd,QAAS,SAACmB,IAvEtD,WACvB,IAAM2H,EAAU,CACdjF,YACAsD,MAAOjD,GAGH6E,EAAa9B,KAAK+B,UAAUF,GAClCzC,EAAS,CACPpG,GAAI0B,EAAK1B,GACT0B,KAAMoH,IA8DiFE,KACnF,kBAAC,KAAD,UA1DC,yBAAKtI,UAAU,aAAf,wB,+BClHLtC,I,OAAYC,aAAW,kBAC3BuD,aAAa,CACXqH,SAAU,CACRC,OAAQ,KACR7G,MAAO,QAET8G,OAAQ,CAACC,UAAW,oBAaTC,GATS,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,QACnBC,EAASnL,KACf,OACE,kBAACoL,GAAA,EAAD,CAAU9I,UAAW6I,EAAON,SAAUQ,KAAMH,GAC1C,kBAAC,KAAD,CAAQI,OAAQJ,EAAS7D,KAAK,6BAA6BkE,eAAgBJ,EAAOJ,W,qGChB3ES,G,OAAgBvL,IAAW,SAACC,GAAD,OACtCsD,aAAa,CACXiI,UAAW,CACT7F,UAAW,GACXxF,aAAc,IAEhBsL,SAAU,CACR9F,UAAW,GACXxF,aAAc,SCXPuL,GAAiB,SAACC,GAC7B,IAAM1C,EAAS0C,EAAKC,QAAQ,WAAY,OACxC,OAAO3C,EAAO4C,OAAO,GAAG1B,cAAgBlB,EAAO6C,MAAM,ICqCjDC,GAAqBC,sBAAW,WAAoDC,GAAS,IAA1D/J,EAAyD,EAAzDA,KAAMpD,EAAmD,EAAnDA,MAAOgL,EAA4C,EAA5CA,aAA4C,EACpErL,oBAAS,GAD2D,mBACzFyN,EADyF,KACjFC,EADiF,KAE1FjB,EAASK,KACTa,EAAyB,WAC7BD,GAAWD,IAEb,OACE,kBAAC,IAAD,CACEG,WAAS,EACTvC,aAAcA,EACdhL,QAASA,EACT6C,GAAIO,EACJQ,MAAOgJ,GAAexJ,GACtBA,KAAMA,EACNxC,QAAQ,SACR0H,KAAO8E,EAAkB,WAAT,OAChB7J,UAAW6I,EAAOM,UAClBc,SAAUL,EACV9E,WAAU,OAAErI,QAAF,IAAEA,OAAF,EAAEA,EAAOW,QACnB8M,WAAY,CACVC,aACE,kBAACC,GAAA,EAAD,CAAgBC,SAAS,OACvB,kBAACpK,EAAA,EAAD,CACEE,aAAW,6BACXd,QAAS0K,EACTO,YAAaP,GAEXF,EAA0B,kBAAC,KAAD,MAAjB,kBAAC,KAAD,cASnBU,GAAaZ,sBAAW,WAAuDC,GAAS,IAA7D/J,EAA4D,EAA5DA,KAAMkF,EAAsD,EAAtDA,KAAMtI,EAAgD,EAAhDA,MAAOgL,EAAyC,EAAzCA,aAC5CoB,EAASK,KAEf,OADAxM,QAAQC,IAAIF,GAEV,kBAAC,IAAD,CACEuN,WAAS,EACTvC,aAAcA,EACdhL,QAASA,EACTuD,UAAW6I,EAAOM,UAClB7J,GAAIO,EACJ+E,UAAoB,cAATG,EACX1E,MAAOgJ,GAAexJ,GACtBA,KAAMA,EACNxC,QAAQ,SACR0H,KAAM,OACNkF,SAAUL,EACV9E,WAAU,OAAErI,QAAF,IAAEA,OAAF,EAAEA,EAAOW,aAKnBoN,GAAgBb,sBAAW,WAAuDC,GAAS,IAA7D/J,EAA4D,EAA5DA,KAAM2H,EAAsD,EAAtDA,QAASC,EAA6C,EAA7CA,aAC3CoB,EAASK,KACf,OACE,kBAAC,IAAD,CACEc,WAAS,EACTnK,KAAMA,EACNQ,MAAOgJ,GAAexJ,GACtB4H,aAAcA,EACdnI,GAAIO,EACJ4K,QAAM,EACNR,SAAUL,EACV5J,UAAW6I,EAAOO,SAClBsB,YAAa,CACXC,QAAQ,EACRC,WAAW,GAEbvN,QAAQ,UAEPmK,EAAQzG,KAAI,SAAC6G,GAAD,OACX,4BAAQ1L,IAAK0L,EAAQ7K,MAAO6K,GACzBA,UAsEJ,SAASiD,GAAT,GAAyF,IAAzEC,EAAwE,EAAxEA,OAAQC,EAAgE,EAAhEA,YAAaC,EAAmD,EAAnDA,SAAUlM,EAAyC,EAAzCA,MAAOmM,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,UAAwB,EAClDC,aAAQ,CAAEC,eAAgB,aAA7DC,EADqF,EACrFA,SAAUC,EAD2E,EAC3EA,aAAcC,EAD6D,EAC7DA,OAEhC,OACE,0BACEP,SAAU,SAACtK,GAET,OADAA,EAAE8K,iBACKF,EAAaN,EAAbM,CAAuB5K,IAEhCV,UAAU,QAEV,yBAAKA,UAAU,eACb,kBAAC,IAAD,CAAY3C,QAAQ,MAAMyB,IAE5B,yBAAKkB,UAAU,kBACZ8K,EAAO/J,KAAI,SAAC0K,GAAD,OA9EC,SAACC,EAAuBL,GAAmB,IACtD5O,EAAgBiP,EAAhBjP,MAAOoD,EAAS6L,EAAT7L,KACf,OAAQ6L,EAAU3G,MAChB,IAAK,OACL,IAAK,YACH,OACE,kBAACwF,GAAD,CACErO,IAAKyP,KAAQC,WACbnP,MAAOA,EACPoD,KAAMA,EACN+J,IAAKyB,EACLtG,KAAM2G,EAAU3G,KAChB0C,aAAciE,EAAUjE,eAG9B,IAAK,WACH,OACE,kBAACiC,GAAD,CACE3E,KAAM2G,EAAU3G,KAChB7I,IAAKyP,KAAQC,WACbnP,MAAOA,EACPoD,KAAMA,EACN+J,IAAKyB,EACL5D,aAAciE,EAAUjE,eAG9B,IAAK,SACH,OACE,kBAACiE,EAAUlJ,UAAX,CACEuC,KAAM2G,EAAU3G,KAChB7I,IAAKyP,KAAQC,WACbnP,MAAOA,EACPoD,KAAMA,EACN+J,IAAKyB,EACL5D,aAAciE,EAAUjE,eAG9B,IAAK,WACH,OACE,kBAAC+C,GAAD,CACEzF,KAAM2G,EAAU3G,KAChB7I,IAAKyP,KAAQC,WACbnP,MAAOA,EACPoD,KAAMA,EACN+J,IAAKyB,EACL7D,QAASkE,EAAUlE,QACnBC,aAAciE,EAAUjE,eAG9B,QACE,OAAO,yBAAKzH,UAAU,WAAf,wBA6BH6L,CAAa,2BAAKJ,GAAN,IAAkBhP,MAAO8O,EAAOE,EAAW5L,QAASwL,EAASI,EAAWK,kBAGxF,yBAAK9L,UAAU,gBACb,kBAAC+L,EAAA,EAAD,CAAQ1O,QAAQ,YAAYsE,MAAM,UAAUqK,KAAK,QAAQC,kBAAgB,EAAClH,KAAK,UAC5EgG,GAEDG,GACA,kBAACa,EAAA,EAAD,CAAQpK,MAAM,UAAUqK,KAAK,QAAQC,kBAAgB,EAAC5M,QAAS4L,GAA/D,YCmNKiB,OA1Yf,WAAgB,IAAD,QACuB9P,mBAAqB,IAD5C,mBACN+P,EADM,KACMC,EADN,OAEahQ,mBAAiB,IAF9B,mBAENoK,EAFM,KAEC6F,EAFD,OAG6BjQ,mBAAyB,IAHtD,mBAGNkQ,EAHM,KAGSC,EAHT,OAK6BnQ,mBAAS,CAAE2M,MAAM,EAAOyD,iBAAkB,KALvE,mBAKNC,EALM,KAKSC,EALT,OAMoBzP,IANpB,mBAMN+I,EANM,KAMOC,EANP,OAO+C7J,mBAAS,CAAE2M,MAAM,EAAO7J,KAAM,WAP7E,mBAONyN,EAPM,KAOkBC,EAPlB,OAQiBxQ,oBAAS,GAR1B,mBAQNwM,EARM,KAQGiE,EARH,OAS2BzQ,mBAIrC,CAAEyD,KAAM,GAAIP,GAAI,KAbN,mBASNwN,EATM,KASQC,EATR,KAePtN,GAAUuN,IACVC,GAAUC,cAEhBpQ,qBAAU,WACR+P,GAAW,GACXM,OACC,IAEHrQ,qBAAU,WACkB,IAAD,EAArBwP,EAAcnG,SAChB0G,GAAW,GACXO,IAAgB,UAAAd,EAAce,MAAK,SAAAC,GAAK,OAAIA,EAAMC,mBAAlC,eAA6CjO,KAAMgN,EAAc,GAAGhN,OAErF,CAACgN,IAGJ,IAAMvF,GAAiB,SAACC,EAAgB5J,GACtC,OAAQ4J,GACN,IAAK,UACHhB,EAAY,uBACZ,MACF,IAAK,QACHC,EAAU7I,GAAW,oBA0BrBoQ,GAAsB,SAAClO,GAC3B+M,EAAS7F,EAAMzF,KAAI,SAAAC,GACjB,OAAIA,EAAK1B,KAAOA,EACP,2BACF0B,GADL,IAEE9B,KAAM,SAIH8B,OAILyM,GAAW,uCAAG,WAAOnO,GAAP,SAAAoH,EAAA,yDAClBgG,EAAiB,CACf3D,KAAO0D,EAAcD,mBAAqBlN,GAAyC,KAAnCmN,EAAcD,kBAA6BC,EAAc1D,KAAO0D,EAAc1D,KAC9HyD,iBAAkBlN,IAGhBmN,EAAcD,mBAAqBlN,EANrB,gCAOVoO,GAAWpO,GAPD,2CAAH,sDAWX0C,GAAiB,SAAChB,GACtB+L,EAAgB,CACdzN,GAAI0B,EAAK1B,GACTO,KAAMmB,EAAKnB,KACXmB,KAAMA,EAAKwF,SAITmH,GAAgB,uCAAG,WAAOrO,GAAP,SAAAoH,EAAA,6DACvBmG,GAAW,GADY,kBAGf7H,KAAO4I,OAAO,SAAStO,GAHR,OAIrB+M,EAAS7F,EAAMW,QAAO,SAAAnG,GAAI,OAAIA,EAAK1B,KAAOA,MAC1CuN,GAAW,GACX9F,GAAe,WANM,gDAQrB8F,GAAW,GACXnQ,QAAQC,IAAR,MACAoK,GAAe,QAAS,KAAI3J,SAVP,yDAAH,sDAchByQ,GAAoB,uCAAG,WAAOvO,GAAP,SAAAoH,EAAA,6DAC3BmG,GAAW,GADgB,kBAGnB7H,KAAO4I,OAAO,aAAatO,GAHR,OAIzB8M,EAAcD,EAAWhF,QAAO,SAAA2G,GAAQ,OAAIA,EAASxO,KAAOA,MAC5DuN,GAAW,GACX9F,GAAe,WANU,gDAQzB8F,GAAW,GACXnQ,QAAQC,IAAR,MACAoK,GAAe,QAAS,KAAI3J,SAVH,yDAAH,sDAcpB2Q,GAAwB,uCAAG,WAAMjN,GAAN,eAAA4F,EAAA,+EAEV1B,KAAOgJ,KAAK,gBAAiBlN,GAFnB,OAEvBmN,EAFuB,OAG7B1B,EAAiB,GAAD,mBAAKD,GAAL,aAAC,eAAwB2B,EAAKnN,MAA9B,IAAoCyM,UAAU,OAC9DX,EAA0B,2BAAID,GAAL,IAA6B5D,MAAM,KAC5DhC,GAAe,WALc,gDAO7BrK,QAAQC,IAAR,MACAoK,GAAe,QAAS,KAAI3J,SARC,yDAAH,sDAYxB8Q,GAAwB,uCAAG,WAAMpN,GAAN,eAAA4F,EAAA,+EAEvB1B,KAAOmJ,IAAI,gBAAiB,CAAE7O,IAAI,UAAAgN,EAAce,MAAK,SAAAC,GAAK,OAAIA,EAAMC,mBAAlC,eAA6CjO,KAAMgN,EAAc,GAAGhN,GAAI8O,QAAS,CAACtN,EAAKjB,QAFlG,OAG7B+M,EAA0B,2BAAID,GAAL,IAA6B5D,MAAM,KAC5DhC,GAAe,WAJc,gDAM7BrK,QAAQC,IAAR,MACAoK,GAAe,QAAS,KAAI3J,SAPC,yDAAH,sDAWxBiR,GAAoB,uCAAG,WAAMvN,GAAN,iBAAA4F,EAAA,6DAC3BmG,GAAW,GADgB,kBAGN7H,KAAOgJ,KAAK,YAAZ,2BAA6BlN,GAA7B,IAAmCwN,gBAAgB,UAAAhC,EAAce,MAAK,SAAAC,GAAK,OAAIA,EAAMC,mBAAlC,eAA6CjO,KAAMgN,EAAc,GAAGhN,MAHjH,OAGnB2O,EAHmB,OAIzB7B,EAAc,GAAD,mBAAMD,EAAWhF,QAAO,SAAA2G,GAAQ,MAAsB,WAAlBA,EAAS5O,SAA7C,aAAC,eAAsE+O,EAAKnN,MAA5E,IAAkF5B,KAAM,eACrG2N,GAAW,GACX9F,GAAe,WANU,kDAQzB8F,GAAW,GACXnQ,QAAQC,IAAR,MACAoK,GAAe,QAAS,KAAI3J,SAVH,0DAAH,sDAcpBmR,GAAoB,uCAAG,WAAMzN,GAAN,eAAA4F,EAAA,6DAC3BmG,GAAW,GADgB,kBAGN7H,KAAOmJ,IAAI,YAAarN,GAHlB,OAGnBmN,EAHmB,OAIzB7B,EAAc,GAAD,mBAAMD,EAAWhF,QAAO,SAAA2G,GAAQ,MAAsB,SAAlBA,EAAS5O,SAA7C,aAAC,eAAoE+O,EAAKnN,MAA1E,IAAgF5B,KAAM,eACnG2N,GAAW,GACX9F,GAAe,WANU,kDAQzB8F,GAAW,GACXnQ,QAAQC,IAAR,MACAoK,GAAe,QAAS,KAAI3J,SAVH,0DAAH,sDAcpBoR,GAAgB,uCAAG,WAAM1N,GAAN,eAAA4F,EAAA,6DACvBmG,GAAW,GADY,kBAGF7H,KAAOgJ,KAAK,QAAZ,2BAA0BlN,GAA1B,IAAgC2N,WAAYhC,EAAcD,oBAHxD,OAGfyB,EAHe,OAIrB5B,EAAS,GAAD,mBAAM7F,EAAMW,QAAO,SAAA2G,GAAQ,MAAsB,WAAlBA,EAAS5O,SAAxC,aAAC,eAAiE+O,EAAKnN,MAAvE,IAA6E5B,KAAM,eAC3F2N,GAAW,GACX9F,GAAe,WANM,kDAQrB8F,GAAW,GACXnQ,QAAQC,IAAR,MACAoK,GAAe,QAAS,KAAI3J,SAVP,0DAAH,sDAchBsR,GAAgB,uCAAG,WAAO5N,GAAP,SAAA4F,EAAA,6DACvBmG,GAAW,GADY,kBAGF7H,KAAOmJ,IAAI,QAASrN,GAHlB,cAIrBuL,EAAS7F,EAAMzF,KAAI,SAAAC,GACjB,OAAIA,EAAK1B,KAAQwB,EAAKxB,GACb,2BACF0B,GADL,IAEEwF,MAAO1F,EAAKE,MAAQA,EAAKwF,MACzB3G,KAAMiB,EAAKjB,MAAQmB,EAAKnB,KACxBX,KAAM,YAIH8B,MAELF,EAAKE,KACP+L,EAAgB,2BACXD,GADU,IAEb9L,KAAMF,EAAKE,QAGb+L,EAAgB,2BACXD,GADU,IAEbjN,KAAMiB,EAAKjB,QAGfgN,GAAW,GACX9F,GAAe,WA5BM,kDA8BrB8F,GAAW,GACXnQ,QAAQC,IAAR,MACAoK,GAAe,QAAS,KAAI3J,SAhCP,0DAAH,sDAoChB+P,GAAkB,uCAAG,4BAAAzG,EAAA,+EAEJ1B,KAAO2B,IAAI,iBAFP,WAEjBsH,EAFiB,QAIbnN,KAAKqF,OAJQ,uBAKrByG,EAA0B,2BAAKD,GAAN,IAA8B5D,MAAM,KAC7D8D,GAAW,GANU,0BAUvBN,EAAiB0B,EAAKnN,KAAKC,KAAI,SAAC4N,EAAU1N,GAAX,mBAAC,eAAiC0N,GAAlC,IAAuCpB,SAAoB,IAAVtM,QAChF4L,GAAW,GACX9F,GAAe,UAAW,sCAZH,kDAcvBrK,QAAQC,IAAR,MACAkQ,GAAW,GACX9F,GAAe,QAAS,KAAI3J,SAhBL,0DAAH,qDAoBlBgQ,GAAe,uCAAG,WAAOkB,GAAP,eAAA5H,EAAA,+EAED1B,KAAO2B,IAAP,oBAAwB2H,IAFvB,OAEdL,EAFc,OAGpB7B,EAAc6B,EAAKnN,KAAKC,KAAI,SAAC+M,GAAD,mBAAC,eAAuBA,GAAxB,IAAkC5O,KAAM,gBACpE2N,GAAW,GACX9F,GAAe,UAAW,mCALN,gDAOpBrK,QAAQC,IAAR,MACAkQ,GAAW,GACX9F,GAAe,QAAS,KAAI3J,SATR,yDAAH,sDAcfsQ,GAAU,uCAAG,WAAOe,GAAP,eAAA/H,EAAA,+EAEI1B,KAAO2B,IAAP,gBAAoB8H,IAFxB,OAETR,EAFS,OAGf5B,EAAS4B,EAAKnN,KAAKC,KAAI,SAACC,GAAD,mBAAC,eAAmBA,GAApB,IAA0B9B,KAAM,gBACvD2N,GAAW,GACX9F,GAAe,UAAW,8BALX,gDAOfrK,QAAQC,IAAR,MACAkQ,GAAW,GACX9F,GAAe,QAAS,KAAI3J,SATb,yDAAH,sDAahB,OACE,yBAAK4C,UAAU,OACb,kBAAC4O,GAAD,CAAiBhG,QAASA,IAC1B,kBAACiG,EAAA,EAAD,CACE9F,KAAM4D,EAAuB5D,KAC7B/I,UAAWP,GAAQvB,SACnB8L,WAAS,EACT8E,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAAClE,GAAD,CACI/L,MAAO,gCACPiM,YAAa,SACbC,SAA0C,WAAhC2B,EAAuBzN,KAAoB6O,GAA2BG,GAChFhD,WAAW,EACXJ,OAAQ,CACN,CACE/F,KAAM,OACNlF,KAAM,OACNiM,YAAa,CACXkD,SAAU,WACVC,IAAK,CACHlS,MAAO,EACPK,QAAS,wDAOvB,yBAAK4C,UAAU,iBACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,oCACb,kBAAC,IAAD,CAAY3C,QAAQ,MAApB,SAGA,yBAAK2C,UAAU,2CACb,kBAAC,IAAD,CACEyK,QAAM,EACNC,YAAa,CACXC,QAAQ,GAEVtN,QAAQ,SACR2M,WAAS,EACThK,UAAWP,GAAQrB,aAElBkO,EAAcvL,KAAI,SAAC6G,GAAD,OACjB,4BAAQ1L,IAAK0L,EAAOtI,GAAIvC,MAAO6K,EAAOtI,IACnCsI,EAAO/H,UAId,kBAACI,EAAA,EAAD,CAAYE,aAAW,SAASd,QAAS,WAAQuN,EAA0B,CAAE7D,MAAM,EAAM7J,KAAM,aAC7F,kBAAC,IAAD,QAGJ,yBAAKc,UAAU,8BACb,kBAACkP,EAAD,CACEpO,KAAMqL,EACNhN,OAAQkP,GACRjP,SAAUyO,GACVxO,QAASoO,GACTlO,cA3RU,SAACD,GACvB8M,EAAcD,EAAWpL,KAAI,SAAA+M,GAC3B,OAAIA,EAASxO,KAAOA,EACX,2BACFwO,GADL,IAEE5O,KAAM,SAIH4O,OAmRGtO,OAAQ+O,MAEZ,kBAACxC,EAAA,EAAD,CACE1O,QAAQ,YACRsE,MAAM,UACNqK,KAAK,QACLhM,UAAWP,GAAQ5B,OACnBsR,QAAS,kBAAC,IAAD,MACT9P,QA5SG,WACb+M,EAAc,GAAD,mBAAKD,GAAL,CAAiB,CAAEtM,KAAM,GAAIP,GAAK6M,EAAWhG,OAAQC,WAAYlH,KAAM,eAqS5E,OAUA,kBAAC6M,EAAA,EAAD,CACE1O,QAAQ,YACRsE,MAAM,UACNqK,KAAK,QACL3M,QAAS,WAAQ4N,GAAQmC,KAAK,SAAU7S,aAAa8S,WAAW,WAJlE,WASF,yBAAKrP,UAAS,qCAAgCyM,EAAc1D,KAAO,WAAa,KAC9E,kBAAC,IAAD,CAAY1L,QAAQ,KAAK0C,cAAY,GAArC,UACGoM,EAAWkB,MAAK,SAAAS,GAAQ,OAAIA,EAASxO,KAAOmN,EAAcD,2BAD7D,aACG,EAA6E3M,KADhF,UAGA,kBAACqI,EAAA,EAAD,CAAMlI,UAAWP,GAAQzB,WAErBwI,EAAMzF,KAAI,SAACC,EAAMC,GAAP,OACR,kBAACqO,GAAD,CACEpT,IAAK+E,EACLD,KAAMA,EACNgB,eAAgBA,GAChB7C,OAAQqP,GACRpP,SAAUuO,GACVpO,cAAeiO,GACfhO,OAAQkP,SAKhB,kBAAC3C,EAAA,EAAD,CACE1O,QAAQ,YACRsE,MAAM,UACNqK,KAAK,QACLhM,UAAWP,GAAQ5B,OACnBsR,QAAS,kBAAC,IAAD,MACT9P,QA9UO,WACjBgN,EAAS,GAAD,mBAAK7F,GAAL,CAAY,CAAE3G,KAAM,GAAIP,GAAKkH,EAAML,OAAQC,WAAYlH,KAAM,eAuU7D,SAYJ,yBAAKc,UAAU,wBACb,kBAAC,GAAD,CAASgB,KAAM8L,EAAcpH,SAAUgJ,GAAkB/I,OAAO,UAAA2G,EAAce,MAAK,SAAAC,GAAK,OAAIA,EAAMC,mBAAlC,eAA6CjO,MAA7C,UAAmDgN,EAAc,UAAjE,aAAmD,EAAkBhN,U,mBC5YhIiQ,GAhBO5R,aAAW,SAACC,GAAD,OAC/BsD,aAAa,CACXsO,UAAW,CACTlM,UAAW1F,EAAMG,QAAQ,GACzBD,aAAcF,EAAMG,QAAQ,GAC5BqD,MAAO,QAETvD,OAAQ,CACNsF,UAAW,SACXsM,cAAe,OACfC,SAAU,OACVC,WAAY,UCkJHC,GA/IF,WAAO,IAAD,EACSxT,mBAAS,SADlB,mBACVyT,EADU,KACHC,EADG,OAEa1T,oBAAS,GAFtB,mBAEVwM,EAFU,KAEDiE,EAFC,OAGS5Q,EAAgB,SAHzB,mBAGVgJ,EAHU,KAGH8K,EAHG,KAIXtQ,EAAU8P,KAJC,EAKgBtS,IALhB,mBAKV+I,EALU,KAKGC,EALH,KAOXqF,EAAY,uCAAG,WAAOxK,GAAP,SAAA4F,EAAA,yDACnBmG,GAAW,GACG,UAAVgD,EAFe,gCAGXG,EAAYlP,GAHD,6CAKXmP,EAAenP,GALJ,OAOnB+L,GAAW,GAPQ,2CAAH,sDAUZqD,EAAS,uCAAG,WAAOC,GAAP,SAAAzJ,EAAA,sEACH1B,KAAOgJ,KAAK,cAAemC,GADxB,mFAAH,sDAITC,EAAY,uCAAG,WAAOD,GAAP,SAAAzJ,EAAA,sEACN1B,KAAOgJ,KAAK,iBAAkBmC,GADxB,mFAAH,sDAIZH,EAAW,uCAAG,WAAOlP,GAAP,eAAA4F,EAAA,+EAEGwJ,EAAUpP,GAFb,QAGhB,QADMmN,EAFU,cAGhB,IAAIA,OAAJ,EAAIA,EAAMnN,KAAKA,KAAKuP,eAClBN,EAAS9B,EAAKnN,KAAKA,KAAKuP,cAC1BrK,EAAY,qBALI,gDAOhBtJ,QAAQC,IAAR,MACAsJ,EAAU,KAAM7I,SARA,yDAAH,sDAYX6S,EAAc,uCAAG,WAAOnP,GAAP,SAAA4F,EAAA,+EAEb0J,EAAatP,GAFA,OAGnBgP,EAAS,SACT9J,EAAY,4BAJO,gDAMnBtJ,QAAQC,IAAR,MACAsJ,EAAU,KAAM7I,SAPG,yDAAH,sDAqEpB,OACE,yBAAK4C,UAAU,SACb,kBAAC4O,GAAD,CAAiBhG,QAASA,IACzB3D,GACC,kBAAC,IAAD,CACEqL,GAAI,CACFC,SAAU,OAIhB,kBAACC,GAAA,EAAD,CAAQC,QAAM,GACZ,yBACEzQ,UAAU,cACV0Q,IAAI,yFACJC,IAAI,cAGR,yBAAK3Q,UAAU,cACb,yBAAKA,UAAU,mBACb,kBAAC6K,GAAD,CACE/L,MAAO,mBACPiM,YAAuB,UAAV8E,EAAoB,QAAU,WAC3C7E,SAAUM,EACVJ,WAAW,EACXJ,OAAkB,UAAV+E,EAlFqB,CACrC,CACE9K,KAAM,OACNlF,KAAM,QACNiM,YAAa,CACXkD,SAAU,WACV4B,QAAS,CACP7T,MAAO,2CACPK,QAAS,2BAIf,CACE2H,KAAM,WACNlF,KAAM,aAImC,CAC3C,CACEkF,KAAM,OACNlF,KAAM,WACNiM,YAAa,CACXkD,SAAU,WACVC,IAAK,CACHlS,MAAO,EACPK,QAAS,oDAIf,CACE2H,KAAM,OACNlF,KAAM,QACNiM,YAAa,CACXkD,SAAU,WACV4B,QAAS,CACP7T,MAAO,2CACPK,QAAS,2BAIf,CACE2H,KAAM,WACNlF,KAAM,WACNiM,YAAa,CACXkD,SAAU,oBACVC,IAAK,CACHlS,MAAO,EACPK,QAAS,sDAEXyT,IAAK,CACH9T,MAAO,GACPK,QAAS,2DAgCT,kBAAC2O,EAAA,EAAD,CACE/L,UAAWP,EAAQ5B,OACnB8D,MAAM,YACNtC,QAAS,kBAAMyQ,EAAmB,UAAVD,EAAoB,WAAa,WAC/C,UAAVA,EAAA,0FCxICiB,GAAe,SAAC,GAA4C,IAA/BC,EAA8B,EAAzCvO,UAAyBwO,EAAgB,+BACtD/U,EAAgB,SAAzBgJ,EAD+D,oBAEtE,OAAO,kBAAC,IAAD,iBAAW+L,EAAX,CAAiBC,OAAQ,SAACxL,GAAD,OAAYR,EAAQ,kBAAC8L,EAActL,GAAY,kBAAC,IAAD,CAAU6K,GAAG,eAG/EY,GAfA,WACb,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,QAAQ3O,UAAWoN,KAC/B,kBAAC,GAAD,CAAcwB,OAAK,EAACD,KAAK,IAAI3O,UAAW0J,KACxC,kBAAC,GAAD,CAAciF,KAAK,IAAI3O,UAAW0J,OCCpBmF,QACW,cAA7B/U,OAAOgV,SAASC,UAEe,UAA7BjV,OAAOgV,SAASC,UAEhBjV,OAAOgV,SAASC,SAASC,MACvB,2DCPN,IAAM5T,GAAQ6T,YAAe,CAC3BnQ,QAAS,CACPgB,QAAS,CACPoP,KAAMC,IAAK,MAEbpP,UAAW,CACTmP,KAAM7P,IAAWC,SAKvB8P,IAASX,OACP,kBAAC,IAAMY,WAAP,KACE,kBAACC,EAAA,EAAD,CAAelU,MAAOA,IACpB,kBAAC,qBAAD,CAAoBmU,eAAe,IACnC,kBAAC,IAAD,CAAkBC,SAAU,GAC1B,kBAAC,IAAD,KACE,kBAAC,GAAD,UAKRC,SAASC,eAAe,SD0GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAhW,GACLC,QAAQD,MAAMA,EAAMW,c","file":"static/js/main.cf64fc61.chunk.js","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useSnackbar } from 'notistack';\n\nexport function useLocalStorage(key: string, initialValue?: string): [string | undefined, (value?: string) => void] {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? item : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = (value?: string) => {\n    try {\n      window.localStorage.setItem(key, value || '');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    setStoredValue(window.localStorage.getItem(key) || storedValue);\n    // eslint-disable-next-line\n  }, [window.localStorage.getItem(key)])\n\n  return [storedValue, setValue];\n}\n\nexport function useMessage() {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const showSuccess = (message: string) => {\n    enqueueSnackbar(message, {\n      variant: 'success',\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center',\n      },\n      preventDuplicate: true,\n    })\n  }\n  \n  const showError = (message: string) => {\n    enqueueSnackbar(message, {\n      variant: 'error',\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center',\n      },\n      preventDuplicate: true,\n    })\n  }\n  \n  const showInfo = (message: string) => {\n    enqueueSnackbar(message, {\n      variant: 'info',\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center',\n      },\n      preventDuplicate: true,\n    })\n  }\n\n  return [showSuccess, showError, showInfo];\n}\n","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginBottom: theme.spacing(4),\n  },\n  notesList: {\n    flexGrow: 1,\n  },\n  orgModal: {\n    padding: 24\n  },\n  orgSelector: {\n    maxWidth: '50%',\n  }\n}));\n\nexport default useStyles;","import { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    padding: 8,\n    marginBottom: 8,\n    // borderRadius: 24,\n    height: 54,\n    backgroudColor: '#e0e0e0',\n\n    '&:hover': {\n      cursor: \"pointer\",\n    }\n  },\n  title: {\n    paddingLeft: 12,\n  },\n  newCategoryTextField: {\n    flexGrow: 1,\n    paddingLeft: 12,\n  }\n}));\n\nexport default useStyles;","import React, { useState } from 'react';\n\nimport { Paper } from '@material-ui/core';\n\nimport useCategoryItemStyles from './styles';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport TextField from '@material-ui/core/TextField/TextField';\nimport DoneIcon from '@material-ui/icons/Done';\nimport EditIcon from '@material-ui/icons/Edit';\n\nexport interface CategoryListItemProps {\n  id: string;\n  title: string;\n  mode: 'create' | 'edit' | 'display';\n  onSave: (note: { name: string }) => void;\n  onDelete: (id: string) => void;\n  onEdit: (note: { name: string, id: string }) => void;\n  onClick: (id: string) => void;\n  selectForEdit: (id: string) => void;\n}\n\nconst CategoryListItem = ({ title, mode, onSave, onDelete, onClick, id, selectForEdit, onEdit }: CategoryListItemProps) => {\n  const classes = useCategoryItemStyles();\n  const [value, setvalue] = useState(title);\n\n  const handleSave = () => { mode === 'create' ? onSave({ name: value }) : onEdit({ name: value, id }) };\n\n  const displayMode = (\n    <>\n      <Typography variant=\"body1\" gutterBottom className={classes.title} >\n        { title }\n      </Typography>\n      <div>\n        <IconButton edge=\"end\" aria-label=\"edit\" onClick={() => selectForEdit(id)}>\n          <EditIcon />\n        </IconButton>\n        <IconButton aria-label=\"delete\"  onClick={() => { onDelete(id); }}>\n          <DeleteIcon />\n        </IconButton>\n      </div>\n      \n    </>\n  )\n\n  const editMode = (\n    <>\n      <TextField\n        label=\"Category\"\n        variant=\"filled\"\n        className={classes.newCategoryTextField}\n        autoFocus\n        value={value}\n        onKeyPress={(event) => { if (event.key === 'Enter') { handleSave(); }}}\n        onChange={e => setvalue(e.target.value)}/>\n\n      <IconButton aria-label=\"done\" onClick={handleSave}>\n        <DoneIcon />\n      </IconButton>\n    </>\n  )\n\n  return (\n  <Paper variant=\"outlined\" className={classes.container} onClick={() => { if (mode === 'display') { onClick(id) } }}>\n    { mode !== 'display' ? editMode : displayMode }\n  </Paper>)\n}\n\nexport default CategoryListItem;\n","import { Typography } from '@material-ui/core';\nimport React from 'react';\n\nimport NoteListItem from '../CategoryListItem';\n\nexport interface Category {\n  id: string;\n  name: string;\n  mode: 'create' | 'edit' | 'display';\n}\n\nexport interface NoteListProps {\n  data: Category[];\n  onSave: (note: { name: string }) => void;\n  onDelete: (id: string) => void;\n  onClick: (id: string) => void;\n  selectForEdit: (id: string) => void;\n  onEdit: (note: { name: string, id: string }) => void;\n}\n\nconst NoteList = ({ data, onSave, onDelete, onClick, selectForEdit, onEdit }: NoteListProps) => {\n  return (\n    <div className=\"list\">\n      <Typography variant=\"h6\" gutterBottom>\n        Categories\n      </Typography>\n      { data.map((note, index) =>\n        <NoteListItem\n          key={index}\n          id={note.id}\n          title={note.name}\n          mode={note.mode}\n          onSave={onSave}\n          onDelete={onDelete}\n          selectForEdit={selectForEdit}\n          onEdit={onEdit}\n          onClick={onClick} />) }\n    </div>\n  )\n}\n\nexport default NoteList;","import { makeStyles, Theme, createStyles } from \"@material-ui/core\";\nimport { deepOrange } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n      display: 'inline',\n    },\n    avatar: {\n      color: theme.palette.getContrastText(deepOrange.A200),\n      backgroundColor: deepOrange.A200,\n    },\n    newNoteTextField: {\n      flexGrow: 1,\n      paddingLeft: 12,\n    }\n  }),\n);\n\nexport default useStyles;\n","import { ListItem, ListItemAvatar, Avatar, ListItemText, Typography, Divider, IconButton, TextField, ListItemSecondaryAction } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport useStyles from './styles';\nimport DoneIcon from '@material-ui/icons/Done';\nimport EditIcon from '@material-ui/icons/Edit';\n\nexport interface Note {\n  name: string;\n  notes?: string;\n  updatedAt?: string;\n  id: string;\n  mode: 'create' | 'edit' | 'display';\n}\n\nexport interface NoteListProps {\n  note: Note;\n  onNoteSelected: (note: Note) => void;\n  onSave: (note: { name: string }) => void;\n  onDelete: (id: string) => void;\n  selectForEdit: (id: string) => void;\n  onEdit: (note: { name: string, id: string }) => void;\n}\n\nconst NoteList = ({ note, onNoteSelected, onSave, onDelete, selectForEdit, onEdit }: NoteListProps) => {\n  const classes = useStyles();\n  const [value, setvalue] = useState(note.name);\n\n  const handleSave = () => { note.mode === 'create' ? onSave({ name: value }) : onEdit({ name: value, id: note.id }); };\n\n  const displayMode = (\n    <>\n      <ListItemAvatar>\n      <Avatar className={classes.avatar}>{note.name.split(\"\")[0]?.toLocaleUpperCase()}</Avatar>\n      </ListItemAvatar>\n      <ListItemText\n        primary={note.name}\n        secondary={<>\n          <Typography\n            component=\"span\"\n            variant=\"body2\"\n            className={classes.inline}\n            color=\"textPrimary\"\n          >\n            Last Modified: {note.updatedAt && new Intl.DateTimeFormat().format(new Date(note.updatedAt))}\n          </Typography>\n        </>} />\n        <ListItemSecondaryAction>\n          <IconButton edge=\"end\" aria-label=\"edit\" onClick={() => selectForEdit(note.id)}>\n            <EditIcon />\n          </IconButton>\n          <IconButton edge=\"end\" aria-label=\"delete\"  onClick={() => onDelete(note.id)}>\n            <DeleteIcon />\n          </IconButton>\n        </ListItemSecondaryAction>\n    </>\n  )\n\n  const editMode = (\n    <>\n      <TextField\n        label=\"Meeting\"\n        variant=\"filled\"\n        className={classes.newNoteTextField}\n        autoFocus\n        value={value}\n        onKeyPress={(event) => { if (event.key === 'Enter') { handleSave(); }}}\n        onChange={e => setvalue(e.target.value)}/>\n      <IconButton aria-label=\"done\" onClick={handleSave}>\n        <DoneIcon />\n      </IconButton>\n    </>\n  )\n\n  return (\n    <>\n      <ListItem alignItems=\"flex-start\" button onClick={() => onNoteSelected(note) }>\n        { note.mode !== 'display' ? editMode : displayMode }\n      </ListItem>\n      <Divider variant=\"inset\" component=\"li\" />\n    </>\n  )\n}\n\nexport default NoteList;\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core\";\n\nconst useMeetingStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    attendees: {\n      padding: 12,\n      width: '80%',\n      alignSelf: 'center',\n      height: '8%'\n    },\n    attendeesTag: {\n      marginLeft: 8,\n      marginTop: 16,\n      marginBottom: 16,\n    },\n    meetingNotes: {\n      flexGrow: 1,\n      width: '80%',\n      alignSelf: 'center',\n      overflowY: 'auto'\n    },\n    inputRoot: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      width: '80%',\n      height: '20%',\n      alignSelf: 'center',\n      marginBottom: 48,\n    },\n    inputField: {\n      \n    },\n    doneButton: {\n      justifySelf: 'center',\n    },\n    header: {\n      width: '80%',\n      alignSelf: 'center',\n    },\n    inputFieldTitle: {\n\n    },\n    inputContainer: {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%'\n    },\n    actions: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center'\n    }\n  }),\n);\n\nexport default useMeetingStyles;\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core\";\n\nconst useMeetingNoteItemStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    inline: {\n      width: '96%',\n    },\n    actions: {\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      width: 50\n    },\n    inputRoot: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n      alignSelf: 'center',\n      width: '100%',\n      marginBottom: 48,\n    },\n    inputField: {\n      \n    },\n    doneButton: {\n      justifySelf: 'center',\n    },\n    header: {\n    },\n    inputFieldTitle: {\n    },\n    inputContainer: {\n      display: 'flex',\n      flexDirection: 'column',\n      width: '100%'\n    },\n    displayContainer: {\n      display: 'flex',\n      flexDirection: 'row',\n      alignItems: 'center',\n    },\n    displayTextContainer: {\n      flexGrow: 1,\n    },\n  }),\n);\n\nexport default useMeetingNoteItemStyles;\n","import { ListItem,  ListItemText, Typography, IconButton, ListItemSecondaryAction, TextField } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport React, { useState } from 'react';\nimport useMeetingNoteItemStyles from './styles';\nimport DoneIcon from '@material-ui/icons/Done';\n\nexport interface MeetingNoteItemProps {\n  id: string;\n  title: string;\n  note: string;\n  mode: 'edit' | 'display';\n  onSave: (note: { note?: string; title?: string; id: string }) => void;\n  onDelete: (id: string) => void;\n  onEdit: (id: string) => void;\n}\n\nconst MeetingNoteItem = ({ note, title, id, mode, onEdit, onSave, onDelete}: MeetingNoteItemProps) => {\n  const classes = useMeetingNoteItemStyles();\n  const [textFieldValue, setTextFieldValue] = useState(note);\n  const [titleFieldValue, setTitleFieldValue] = useState(title.split(\" \")[2]);\n\n  const displayMode = (\n    <div className={classes.displayContainer}>\n      <ListItemText\n        primary={title}\n        classes={{ secondary: classes.inline }}\n        secondary={<React.Fragment>\n          <Typography\n            component=\"span\"\n            variant=\"body2\"\n            color=\"textPrimary\"\n            paragraph\n            align=\"justify\"\n          >\n            {note}\n          </Typography>\n        </React.Fragment>} />\n      <ListItemSecondaryAction className={classes.actions}>\n        <IconButton edge=\"end\" aria-label=\"edit\" onClick={() => onEdit(id)}>\n          <EditIcon />\n        </IconButton>\n        <IconButton edge=\"end\" aria-label=\"delete\" onClick={() => onDelete(id)}>\n          <DeleteIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </div>\n  )\n\n  const editMode = (\n    <div className={classes.inputRoot}>\n      <div className={classes.inputContainer}>\n        <TextField\n          label=\"Title\"\n          variant=\"filled\"\n          className={classes.inputFieldTitle}\n          autoFocus\n          value={titleFieldValue}\n          onChange={e => setTitleFieldValue(e.target.value)}/> \n        <TextField\n          className={classes.inputField}\n          label=\"Write your note here\"\n          multiline\n          rows={4}\n          value={textFieldValue}\n          onChange={(event) => setTextFieldValue(event.target.value)}\n          helperText=\"Press enter or icon when done writing\"\n          variant=\"filled\"\n        />\n      </div>\n      <IconButton type=\"submit\" className={classes.doneButton} aria-label=\"search\" onClick={() => { onSave({id, title: `${title.split(\" \")[0]} - ${titleFieldValue}`, note: textFieldValue }) }}>\n        <DoneIcon />\n      </IconButton>\n    </div>\n  )\n  return (\n    <ListItem alignItems=\"flex-start\">\n      { mode === 'edit' ? editMode : displayMode }\n    </ListItem>\n  );\n}\n\nexport default MeetingNoteItem;\n","import axios from 'axios';\n\nexport const http = () => {\n  const token = localStorage.getItem('token');\n\n  return axios.create({\n    baseURL: 'https://analog-notes-api.herokuapp.com',\n    headers: token\n      ? {\n          Authorization: `Bearer ${token}`,\n        }\n      : {},\n    timeout: 90000,\n  });\n};\n","import React, { useEffect, useState } from 'react';\n\nimport { Avatar, Chip, IconButton, List, TextField } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport useMeetingStyles from './styles';\nimport DoneIcon from '@material-ui/icons/Done';\nimport SaveIcon from '@material-ui/icons/Save';\n\nimport './meeting.scss';\nimport MeetingNoteItem from '../../components/MeetingNoteItem';\nimport { http } from '../../utils/axios';\nimport { useMessage } from '../../utils/hooks';\n\ninterface MeetingProps {\n  note: {\n    note?: string;\n    name: string;\n    id: string;\n  },\n  onUpdate: (data: any) => void;\n  orgId?: string;\n}\n\nconst Meeting = (props: MeetingProps) => {\n  const {note, onUpdate, orgId} = props;\n  const classes = useMeetingStyles();\n  const [meetingNotes, setMeetingNotes] = useState<{ note: string; id: string; title: string; mode: 'edit' | 'display'; }[]>([]);\n  const [textFieldValue, setTextFieldValue] = useState('');\n  const [titleFieldValue, setTitleFieldValue] = useState('');\n  const [attendees, setAttendees] = useState([\"Me\"]);\n  const [orgMembers, setOrgMembers] = useState([]);\n  const [showSuccess, showError] = useMessage();\n\n  const handleCreate = () => {\n    setMeetingNotes([...meetingNotes, { id: meetingNotes.length.toString(), mode: 'display', title: `${new Intl.DateTimeFormat().format(new Date())} - ${titleFieldValue}`, note: textFieldValue, }]);\n    setTextFieldValue('');\n    setTitleFieldValue('')\n  }\n\n  useEffect(() => {\n    console.log(note)\n    if (note.note) {\n      const meeting = JSON.parse(note.note);\n      setAttendees(meeting.attendees);\n      setMeetingNotes(meeting.notes);\n    } else {\n      setAttendees([]);\n      setMeetingNotes([]);\n    }\n    if (orgId)\n      fetchOrganisationMembers(orgId);\n  }, [props])\n\n  const fetchOrganisationMembers = async (orgId: string) => {\n    try {\n      const result = await http().get(`/organisation/${orgId}/members`);\n      setOrgMembers(result.data.map((member: any) => member.username));\n    } catch (error) {\n      displayMessage('eror', error.message)\n    }\n  }\n\n  const displayMessage = (status: string, message?: string) => {\n    switch (status) {\n      case 'success':\n        showSuccess('Information fetched')\n        break;\n      case 'error':\n        showError(message || 'request failed');\n        break;\n    }\n  }\n\n  const handleSave = (note: { note?: string; title?: string; id: string}) => {\n    setMeetingNotes(meetingNotes.map(mNote => {\n      if (mNote.id === note.id) {\n        return {\n          ...mNote,\n          ...note,\n          mode: 'display'\n        }\n      }\n\n      return mNote;\n    }))\n  }\n\n  const handleDelete = (id: string) => {\n    setMeetingNotes(meetingNotes.filter(mNote => mNote.id !== id));\n  }\n\n  const handleEdit = (id: string) => {\n    setMeetingNotes(meetingNotes.map(mNote => {\n      if (mNote.id === id) {\n        return {\n          ...mNote,\n          mode: 'edit'\n        }\n      }\n\n      return mNote;\n    }))\n  }\n\n  const handleUpdateNote = () => {\n    const myNotes = {\n      attendees,\n      notes: meetingNotes\n    }\n\n    const noteString = JSON.stringify(myNotes);\n    onUpdate({\n      id: note.id,\n      note: noteString\n    })\n  }\n\n  if (!note.id) {\n    return <div className=\"nomeeting\">No meeting selected</div>\n  }\n\n  return (\n    <div className=\"meeting\">\n      <Typography variant=\"h6\" gutterBottom className={classes.header}>\n        { note.name }\n      </Typography>\n      <Autocomplete\n        className={classes.attendees}\n        multiple\n        value={attendees}\n        onChange={(event, newValue) => {\n          if (newValue) {\n            setAttendees(newValue)\n          }\n        }}\n        id=\"tags-filled\"\n        options={orgMembers}\n        defaultValue={[\"Me\"]}\n        renderTags={(value: string[], getTagProps: any) =>\n          value.map((option: string, index: number) => (\n            <Chip color=\"primary\" label={option} avatar={<Avatar>{option.split(\"\")[0]?.toUpperCase()}</Avatar>} {...getTagProps({ index })} className={classes.attendeesTag}/>\n          ))\n        }\n        renderInput={(params: any) => (\n          <TextField {...params} variant=\"filled\" label=\"Members Present\" miltiline rows={3} />\n        )}\n      />\n      <List className={classes.meetingNotes}>\n        { meetingNotes.map(note => (<MeetingNoteItem {...note} onEdit={handleEdit} onDelete={handleDelete} onSave={handleSave} />))}\n      </List>\n      <div className={classes.inputRoot}>\n        <div className={classes.inputContainer}>\n          <TextField\n            label=\"Title\"\n            variant=\"filled\"\n            className={classes.inputFieldTitle}\n            autoFocus\n            value={titleFieldValue}\n            onKeyPress={(event) => { if (event.key === 'Enter') { handleCreate(); }}}\n            onChange={e => setTitleFieldValue(e.target.value)}/> \n          <TextField\n            className={classes.inputField}\n            label=\"Write your note here\"\n            multiline\n            rows={4}\n            value={textFieldValue}\n            onChange={(event) => setTextFieldValue(event.target.value)}\n            helperText=\"Press the done icon when done writing\"\n            variant=\"filled\"\n          />\n        </div>\n      <div className={classes.actions}>\n        <IconButton className={classes.doneButton} aria-label=\"search\" onClick={(event) => { handleCreate(); }}>\n          <DoneIcon />\n        </IconButton>\n        <IconButton className={classes.doneButton} aria-label=\"search\" onClick={(event) => { handleUpdateNote(); }}>\n          <SaveIcon />\n        </IconButton>\n      </div>\n    </div>\n    </div>\n  )\n}\n\nexport default Meeting;\n","import { makeStyles, createStyles, Backdrop } from '@material-ui/core';\nimport React from 'react';\nimport Loader from 'react-loaders';\nimport './loader.scss';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    backdrop: {\n      zIndex: 1500,\n      color: '#fff',\n    },\n    loader: {transform: 'scale(3.5)'}\n  }),\n);\n\nconst LoaderComponent = ({ loading }: { loading: boolean }) => {\n  const styles = useStyles();\n  return (\n    <Backdrop className={styles.backdrop} open={loading}>\n      <Loader active={loading} type=\"line-scale-pulse-out-rapid\" innerClassName={styles.loader} />\n    </Backdrop>\n  )\n}\n\nexport default LoaderComponent;\n","import { Theme, createStyles } from '@material-ui/core/styles';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\n\nexport const useFormStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    textField: {\n      marginTop: 24,\n      marginBottom: 24,\n    },\n    dropDown: {\n      marginTop: 12,\n      marginBottom: 12,\n    },\n  }),\n);\n","export const toSentenceCase = (word: string) => {\n  const result = word.replace(/([A-Z])/g, ' $1');\n  return result.charAt(0).toUpperCase() + result.slice(1);\n};\n","import React, { useState, forwardRef } from 'react';\n\nimport { InputAdornment, IconButton, Button, TextField, Typography } from '@material-ui/core';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport { useForm, ValidationRules } from 'react-hook-form';\nimport shortId from 'shortid';\n\nimport './form.scss';\nimport { useFormStyles } from './styles';\nimport { toSentenceCase } from '../../utils/lib';\n\ninterface FieldProps {\n  error?: { message: string };\n  name: string;\n  defaultValue?: string | number;\n  validations?: ValidationRules;\n}\n\ninterface InputFieldProps extends FieldProps {\n  type: 'text' | 'multiline';\n}\n\ninterface PasswordFieldProps extends FieldProps {\n  type: 'password';\n}\n\ninterface DropDowntFieldProps extends FieldProps {\n  type: 'dropdown';\n  options: Array<string | number>;\n}\n\ninterface CustomFieldProps extends FieldProps {\n  type: 'custom';\n  component: React.ForwardRefExoticComponent<Omit<CustomFieldProps, 'component'> & React.RefAttributes<unknown>>;\n}\n\nexport type FormFields = InputFieldProps | CustomFieldProps | PasswordFieldProps | DropDowntFieldProps;\n\nconst PasswordInputField = forwardRef(({ name, error, defaultValue }: PasswordFieldProps, ref) => {\n  const [hidden, setHidden] = useState(true);\n  const styles = useFormStyles();\n  const handleVisibilityToggle = () => {\n    setHidden(!hidden);\n  };\n  return (\n    <TextField\n      fullWidth\n      defaultValue={defaultValue}\n      error={!!error}\n      id={name}\n      label={toSentenceCase(name)}\n      name={name}\n      variant=\"filled\"\n      type={!hidden ? 'text' : 'password'}\n      className={styles.textField}\n      inputRef={ref}\n      helperText={error?.message}\n      InputProps={{\n        endAdornment: (\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"toggle password visibility\"\n              onClick={handleVisibilityToggle}\n              onMouseDown={handleVisibilityToggle}\n            >\n              {!hidden ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        ),\n      }}\n    />\n  );\n});\n\nconst InputField = forwardRef(({ name, type, error, defaultValue }: InputFieldProps, ref) => {\n  const styles = useFormStyles();\n  console.log(error);\n  return (\n    <TextField\n      fullWidth\n      defaultValue={defaultValue}\n      error={!!error}\n      className={styles.textField}\n      id={name}\n      multiline={type === 'multiline'}\n      label={toSentenceCase(name)}\n      name={name}\n      variant=\"filled\"\n      type={'text'}\n      inputRef={ref}\n      helperText={error?.message}\n    />\n  );\n});\n\nconst DropDownField = forwardRef(({ name, options, defaultValue }: DropDowntFieldProps, ref) => {\n  const styles = useFormStyles();\n  return (\n    <TextField\n      fullWidth\n      name={name}\n      label={toSentenceCase(name)}\n      defaultValue={defaultValue}\n      id={name}\n      select\n      inputRef={ref}\n      className={styles.dropDown}\n      SelectProps={{\n        native: true,\n        autoWidth: true,\n      }}\n      variant=\"filled\"\n    >\n      {options.map((option) => (\n        <option key={option} value={option}>\n          {option}\n        </option>\n      ))}\n    </TextField>\n  );\n});\n\nconst getFormField = (formField: FormFields, register: any) => {\n  const { error, name } = formField;\n  switch (formField.type) {\n    case 'text':\n    case 'multiline':\n      return (\n        <InputField\n          key={shortId.generate()}\n          error={error}\n          name={name}\n          ref={register}\n          type={formField.type}\n          defaultValue={formField.defaultValue}\n        />\n      );\n    case 'password':\n      return (\n        <PasswordInputField\n          type={formField.type}\n          key={shortId.generate()}\n          error={error}\n          name={name}\n          ref={register}\n          defaultValue={formField.defaultValue}\n        />\n      );\n    case 'custom':\n      return (\n        <formField.component\n          type={formField.type}\n          key={shortId.generate()}\n          error={error}\n          name={name}\n          ref={register}\n          defaultValue={formField.defaultValue}\n        />\n      );\n    case 'dropdown':\n      return (\n        <DropDownField\n          type={formField.type}\n          key={shortId.generate()}\n          error={error}\n          name={name}\n          ref={register}\n          options={formField.options}\n          defaultValue={formField.defaultValue}\n        />\n      );\n    default:\n      return <div className=\"invalid\">Invalid type passed</div>;\n  }\n};\n\ninterface FormProps {\n  fields: FormFields[];\n  actionsName: string;\n  title: string;\n  hasCancel: boolean;\n  onSubmit: (data: any) => void;\n  onCancel?: () => void;\n}\n\nexport function Form({ fields, actionsName, onSubmit, title, onCancel, hasCancel }: FormProps) {\n  const { register, handleSubmit, errors } = useForm({ reValidateMode: 'onSubmit' });\n\n  return (\n    <form\n      onSubmit={(e) => {\n        e.preventDefault();\n        return handleSubmit(onSubmit)(e);\n      }}\n      className=\"form\"\n    >\n      <div className=\"form-header\">\n        <Typography variant=\"h6\">{title}</Typography>\n      </div>\n      <div className=\"form-container\">\n        {fields.map((fieldProps) =>\n          getFormField({ ...fieldProps, error: errors[fieldProps.name] }, register(fieldProps.validations)),\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <Button variant=\"contained\" color=\"primary\" size=\"large\" disableElevation type=\"submit\">\n          {actionsName}\n        </Button>\n        { hasCancel &&\n          <Button color=\"primary\" size=\"large\" disableElevation onClick={onCancel}>\n            Cancel\n          </Button>\n        }\n        \n      </div>\n    </form>\n  );\n}\n","import { Button, Dialog, IconButton, List } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\n\nimport Typography from '@material-ui/core/Typography/Typography';\nimport AddIcon from '@material-ui/icons/Add';\nimport ShareIcon from '@material-ui/icons/Share';\n\nimport useAppStyles from './styles';\nimport CategoryList, { Category } from '../../components/CategoryList';\n\nimport './App.scss';\nimport { Note } from '../../components/NoteListItem';\nimport NoteListItem from '../../components/NoteListItem';\nimport TextField from '@material-ui/core/TextField/TextField';\nimport Meeting from '../Meeting';\nimport LoaderComponent from '../../components/Loader';\nimport { useMessage } from '../../utils/hooks';\nimport { Form } from '../../components/Form';\nimport { http } from '../../utils/axios';\nimport { useHistory } from 'react-router-dom';\n\ninterface Organisation {\n  name: string;\n  id: string;\n  selected: boolean;\n}\n\nfunction App() {\n  const [categories, setCategories] = useState<Category[]>([]);\n  const [notes, setNotes] = useState<Note[]>([]);\n  const [organisations, setOrganisations] = useState<Organisation[]>([]);\n  \n  const [openNotesPane, setopenNotesPane] = useState({ open: false, selectedCategory: '' });\n  const [showSuccess, showError] = useMessage();\n  const [openOrganisationDialog, setOpenOrganisationDialog] = useState({ open: false, mode: 'create' });\n  const [loading, setLoading] = useState(false);\n  const [selectedNote, setSelectedNote] = useState<{\n    note?: string;\n    name: string;\n    id: string;\n  }>({ name: '', id: ''});\n\n  const classes = useAppStyles();\n  const history = useHistory();\n\n  useEffect(() => {\n    setLoading(true);\n    fetchOrganisations()\n  }, []);\n\n  useEffect(() => {\n    if (organisations.length){\n      setLoading(true);\n      fetchCategories(organisations.find(organ => organ.selected)?.id || organisations[0].id)\n    }\n  }, [organisations]);\n\n\n  const displayMessage = (status: string, message?: string) => {\n    switch (status) {\n      case 'success':\n        showSuccess('Information fetched')\n        break;\n      case 'error':\n        showError(message || 'request failed');\n        break;\n    }\n  }\n\n  const addNew = () => {\n    setCategories([...categories, { name: '', id: (categories.length).toString(), mode: 'create' }])\n  }\n  \n  const addNewNote = () => {\n    setNotes([...notes, { name: '', id: (notes.length).toString(), mode: 'create' }])\n  }\n\n  const onSelectForEdit = (id: string) => {\n    setCategories(categories.map(category => {\n      if (category.id === id) {\n        return {\n          ...category,\n          mode: 'edit',\n        }\n      }\n\n      return category;\n    }))\n  }\n\n  const onSelectNoteForEdit = (id: string) => {\n    setNotes(notes.map(note => {\n      if (note.id === id) {\n        return {\n          ...note,\n          mode: 'edit',\n        }\n      }\n\n      return note;\n    }))\n  }\n\n  const toogleNotes = async (id: string) => {\n    setopenNotesPane({\n      open: (openNotesPane.selectedCategory === id || openNotesPane.selectedCategory === '' ) ? !openNotesPane.open : openNotesPane.open,\n      selectedCategory: id\n    });\n\n    if (openNotesPane.selectedCategory !== id) {\n      await fetchNotes(id)\n    }\n  }\n\n  const onNoteSelected = (note: Note) => {\n    setSelectedNote({\n      id: note.id,\n      name: note.name,\n      note: note.notes\n    });\n  }\n\n  const handleDeleteNote = async (id: string) => {\n    setLoading(true);\n    try {\n      await http().delete('/note/'+id)\n      setNotes(notes.filter(note => note.id !== id))\n      setLoading(false);\n      displayMessage('success')\n    } catch(err) {\n      setLoading(false);\n      console.log(err)\n      displayMessage('error', err.message)\n    }\n  }\n\n  const handleDeleteCategory = async (id: string) => {\n    setLoading(true);\n    try {\n      await http().delete('/category/'+id)\n      setCategories(categories.filter(category => category.id !== id))\n      setLoading(false);\n      displayMessage('success')\n    } catch(err) {\n      setLoading(false);\n      console.log(err)\n      displayMessage('error', err.message)\n    }\n  }\n\n  const handleOrganisationCreate = async(data: any) => {\n    try {\n      const resp = await http().post('/organisation', data)\n      setOrganisations([...organisations, { ...resp.data, selected: true }])\n      setOpenOrganisationDialog({...openOrganisationDialog, open: false })\n      displayMessage('success')\n    } catch(err) {\n      console.log(err)\n      displayMessage('error', err.message)\n    }\n  }\n  \n  const handleUpdateOrganisation = async(data: any) => {\n    try {\n      await http().put('/organisation', { id: organisations.find(organ => organ.selected)?.id || organisations[0].id, members: [data.name] })\n      setOpenOrganisationDialog({...openOrganisationDialog, open: false })\n      displayMessage('success')\n    } catch(err) {\n      console.log(err)\n      displayMessage('error', err.message)\n    }\n  }\n  \n  const handleCategoryCreate = async(data: any) => {\n    setLoading(true);\n    try {\n      const resp = await http().post('/category', {...data, organisationId: organisations.find(organ => organ.selected)?.id || organisations[0].id })\n      setCategories([...(categories.filter(category => category.mode !== 'create')), { ...resp.data, mode: 'display' }])\n      setLoading(false);\n      displayMessage('success')\n    } catch(err) {\n      setLoading(false);\n      console.log(err)\n      displayMessage('error', err.message)\n    }\n  }\n  \n  const handleCategoryUpdate = async(data: any) => {\n    setLoading(true);\n    try {\n      const resp = await http().put('/category', data)\n      setCategories([...(categories.filter(category => category.mode !== 'edit')), { ...resp.data, mode: 'display' }])\n      setLoading(false);\n      displayMessage('success')\n    } catch(err) {\n      setLoading(false);\n      console.log(err)\n      displayMessage('error', err.message)\n    }\n  }\n\n  const handleNoteCreate = async(data: any) => {\n    setLoading(true);\n    try {\n      const resp = await http().post('/note', { ...data, categoryId: openNotesPane.selectedCategory })\n      setNotes([...(notes.filter(category => category.mode !== 'create')), { ...resp.data, mode: 'display' }])\n      setLoading(false);\n      displayMessage('success')\n    } catch(err) {\n      setLoading(false);\n      console.log(err)\n      displayMessage('error', err.message)\n    }\n  }\n\n  const handleNoteUpdate = async (data: any) => {\n    setLoading(true);\n    try {\n      const resp = await http().put('/note', data)\n      setNotes(notes.map(note => {\n        if (note.id ===  data.id) {\n          return {\n            ...note,\n            notes: data.note || note.notes,\n            name: data.name || note.name,\n            mode: 'display'\n          };\n        }\n\n        return note;\n      }))\n      if (data.note) {\n        setSelectedNote({\n          ...selectedNote,\n          note: data.note\n        })\n      } else {\n        setSelectedNote({\n          ...selectedNote,\n          name: data.name\n        })\n      }\n      setLoading(false);\n      displayMessage('success')\n    } catch(err) {\n      setLoading(false);\n      console.log(err)\n      displayMessage('error', err.message)\n    }\n  }\n\n  const fetchOrganisations = async () => {\n    try {\n      const resp = await http().get('/organisation');\n\n      if (!resp.data.length) {\n        setOpenOrganisationDialog({ ...openOrganisationDialog, open: true })\n        setLoading(false);\n        return\n      }\n\n      setOrganisations(resp.data.map((org: any, index: number) => ({...org, selected: index === 0})));\n      setLoading(false);\n      displayMessage('success', 'Fetched organisations successfully');\n    } catch (err) {\n      console.log(err)\n      setLoading(false);\n      displayMessage('error', err.message)\n    }\n  }\n\n  const fetchCategories = async (organisationId: string) => {\n    try {\n      const resp = await http().get(`/category/${organisationId}`);\n      setCategories(resp.data.map((category:any) => ({ ...category, mode: 'display' })))\n      setLoading(false);\n      displayMessage('success', 'Fetched categories successfully');\n    } catch (err) {\n      console.log(err)\n      setLoading(false);\n      displayMessage('error', err.message)\n    }\n  }\n\n\n  const fetchNotes = async (categoryId: string) => {\n    try {\n      const resp = await http().get(`/note/${categoryId}`);\n      setNotes(resp.data.map((note:any) => ({ ...note, mode: 'display' })))\n      setLoading(false);\n      displayMessage('success', 'Fetched notes successfully');\n    } catch (err) {\n      console.log(err)\n      setLoading(false);\n      displayMessage('error', err.message)\n    }\n  }\n\n  return (\n    <div className=\"app\">\n      <LoaderComponent loading={loading}/>\n      <Dialog\n        open={openOrganisationDialog.open}\n        className={classes.orgModal}\n        fullWidth\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        <Form\n            title={\"Please create an organisation\"}\n            actionsName={\"submit\"}\n            onSubmit={openOrganisationDialog.mode === \"create\" ? handleOrganisationCreate : handleUpdateOrganisation}\n            hasCancel={false}\n            fields={[\n              {\n                type: 'text',\n                name: 'name',\n                validations: {\n                  required: \"Required\",\n                  min: {\n                    value: 2,\n                    message: 'Please enter a name with at least 2 characters'\n                  }\n                }\n              }\n            ]}\n          />\n      </Dialog>\n      <div className=\"app-container\">\n        <div className=\"app-container-master\">\n          <div className=\"app-container-master__categories\">\n            <Typography variant=\"h4\">\n              Notes\n            </Typography>\n            <div className=\"app-container-master__categories-header\">\n              <TextField\n                select\n                SelectProps={{\n                  native: true,\n                }}\n                variant=\"filled\"\n                fullWidth\n                className={classes.orgSelector}\n              >\n                {organisations.map((option) => (\n                  <option key={option.id} value={option.id}>\n                    {option.name}\n                  </option>\n                ))}\n              </TextField>\n              <IconButton aria-label=\"search\" onClick={() => { setOpenOrganisationDialog({ open: true, mode: 'invite' }); }}>\n                <ShareIcon />\n              </IconButton>\n            </div>\n            <div className=\"app-container-master__list\">\n              <CategoryList\n                data={categories}\n                onSave={handleCategoryCreate}\n                onDelete={handleDeleteCategory}\n                onClick={toogleNotes}\n                selectForEdit={onSelectForEdit}\n                onEdit={handleCategoryUpdate} />\n            </div>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              className={classes.button}\n              endIcon={<AddIcon />}\n              onClick={addNew}\n            >\n              New\n            </Button>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              onClick={() => { history.push('/auth'); localStorage.removeItem('token')}}\n            >\n              Logout\n            </Button>\n          </div>\n          <div className={`app-container-master__notes${openNotesPane.open ? '-visible' : '' }`}>\n            <Typography variant=\"h6\" gutterBottom>\n              {categories.find(category => category.id === openNotesPane.selectedCategory)?.name} Notes\n            </Typography>\n            <List className={classes.notesList}>\n              {\n                notes.map((note, index) => (\n                  <NoteListItem\n                    key={index}\n                    note={note}\n                    onNoteSelected={onNoteSelected}\n                    onSave={handleNoteCreate}\n                    onDelete={handleDeleteNote}\n                    selectForEdit={onSelectNoteForEdit}\n                    onEdit={handleNoteUpdate}\n                     />)\n                )\n              }\n            </List>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              size=\"large\"\n              className={classes.button}\n              endIcon={<AddIcon />}\n              onClick={addNewNote}\n            >\n              New\n            </Button>\n          </div>\n        </div>\n        <div className=\"app-container-detail\">\n          <Meeting note={selectedNote} onUpdate={handleNoteUpdate} orgId={organisations.find(organ => organ.selected)?.id || organisations[0]?.id } />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { makeStyles, Theme, createStyles } from \"@material-ui/core\";\n\nconst useAuthStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    textfield: {\n      marginTop: theme.spacing(3),\n      marginBottom: theme.spacing(3),\n      width: '100%',\n    },\n    button: {\n      alignSelf: 'center',\n      textTransform: 'none',\n      fontSize: '18px',\n      fontWeight: 400,\n    },\n  }),\n);\n\nexport default useAuthStyles;\n","import './auth.scss';\n\nimport React, { useState } from 'react';\n\nimport {\n  Button,\n  Hidden,\n} from '@material-ui/core';\nimport { Redirect } from 'react-router-dom';\n\nimport { Form, FormFields } from '../../components/Form';\nimport { useLocalStorage, useMessage } from '../../utils/hooks';\nimport { http } from '../../utils/axios';\nimport useAuthStyles from './styles';\nimport LoaderComponent from '../../components/Loader';\n\nconst Auth = () => {\n  const [state, setState] = useState('login');\n  const [loading, setLoading] = useState(false);\n  const [token, setToken] = useLocalStorage('token');\n  const classes = useAuthStyles();\n  const [showSuccess, showError] = useMessage();\n  \n  const handleSubmit = async (data: any) => {\n    setLoading(true);\n    if (state === 'login') {\n      await handleLogin(data)\n    } else {\n      await handleRegister(data)\n    }\n    setLoading(false);\n  };\n\n  const loginUser = async (userData: any) => {\n    return await http().post('/auth/login', userData)\n  }\n  \n  const registerUser = async (userData: any) => {\n    return await http().post('/user/register', userData)\n  }\n\n  const handleLogin = async (data: any) => {\n    try {\n      const resp = await loginUser(data);\n      if (resp?.data.data.access_token)\n        setToken(resp.data.data.access_token)\n      showSuccess('login successfull')\n    } catch (error) {\n      console.log(error)\n      showError(error.message)\n    }\n  }\n\n  const handleRegister = async (data: any) => {\n    try {\n      await registerUser(data);\n      setState('login')\n      showSuccess('registration successfull')\n    } catch (error) {\n      console.log(error)\n      showError(error.message)\n    }\n  }\n\n  const loginValidations: FormFields[] = [\n    {\n      type: 'text',\n      name: 'email',\n      validations: {\n        required: \"Required\",\n        pattern: {\n          value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n          message: \"invalid email address\"\n        }\n      }\n    },\n    {\n      type: 'password',\n      name: 'password',\n    },\n  ]\n\n  const registrationValidation: FormFields[] = [\n    {\n      type: 'text',\n      name: 'username',\n      validations: {\n        required: \"Required\",\n        min: {\n          value: 2,\n          message: 'Please enter a name with at least 2 characters'\n        }\n      }\n    },\n    {\n      type: 'text',\n      name: 'email',\n      validations: {\n        required: \"Required\",\n        pattern: {\n          value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\n          message: \"invalid email address\"\n        }\n      }\n    },\n    {\n      type: 'password',\n      name: 'password',\n      validations: {\n        required: \"Password Required\",\n        min: {\n          value: 6,\n          message: 'Please enter a password with at least 6 characters'\n        },\n        max: {\n          value: 15,\n          message: 'Please enter a password with at most 15 characters'\n        },\n      }\n    },\n  ]\n\n  return (\n    <div className=\"login\">\n      <LoaderComponent loading={loading}/>\n      {token && (\n        <Redirect\n          to={{\n            pathname: '/',\n          }}\n        />\n      )}\n      <Hidden mdDown>\n        <img\n          className=\"login-image\"\n          src=\"https://res.cloudinary.com/mikekrantz/image/upload/v1600309819/compressed-abstract.jpg\"\n          alt=\"abstract\"\n        />\n      </Hidden>\n      <div className=\"login-main\">\n        <div className=\"login-container\">\n          <Form\n            title={\"Welcome to Notes\"}\n            actionsName={state === \"login\" ? \"Login\" : \"Register\"}\n            onSubmit={handleSubmit}\n            hasCancel={false}\n            fields={state === \"login\" ? loginValidations : registrationValidation}\n          />\n          <Button\n            className={classes.button}\n            color=\"secondary\"\n            onClick={() => setState(state === 'login' ? 'register' : 'login')}\n          >{state === 'login' ? `Don't have account? Please register here` : `Already have account? Please login here`}</Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Auth;\n  ","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { useLocalStorage } from '../../utils/hooks';\nimport App from '../App';\nimport Auth from '../Auth';\n\nconst Router = () => {\n  return (\n    <Switch>\n      <Route path=\"/auth\" component={Auth} />\n      <PrivateRoute exact path=\"/\" component={App} />\n      <PrivateRoute path=\"/\" component={App} />\n    </Switch>\n  )\n}\n\nexport const PrivateRoute = ({ component: Component, ...rest }: any) => {\n  const [token] = useLocalStorage('token');\n  return <Route {...rest} render={(props) => (token ? <Component {...props} /> : <Redirect to=\"/auth\" />)} />;\n};\n\nexport default Router;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme, ThemeProvider } from '@material-ui/core';\nimport { deepOrange, grey } from '@material-ui/core/colors';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ReactQueryDevtools } from 'react-query-devtools';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport Router from './pages/Routes';\nimport * as serviceWorker from './serviceWorker';\nimport { SnackbarProvider } from 'notistack'\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: grey[700],\n    },\n    secondary: {\n      main: deepOrange.A200,\n    }\n  }\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <ReactQueryDevtools initialIsOpen={false} />\n      <SnackbarProvider maxSnack={3}>\n        <HashRouter>\n          <Router />\n        </HashRouter>\n      </SnackbarProvider>\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}